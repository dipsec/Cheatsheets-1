sys Variables

String Methods

Datetime Methods

capitalize() *

lstrip()

today()

fromordinal(ordinal)

builtin_module_names Linked C modules

center(width)

partition(sep)

now(timezoneinfo)

combine(date, time)

byteorder

Native byte order

count(sub, start, end)

replace(old, new)

utcnow()

strptime(date, format)

check_interval

Signal check frequency

decode()

rfind(sub, start ,end)

fromtimestamp(timestamp)
utcfromtimestamp(timestamp)

argv

Command line args

exec_prefix

Root directory

encode()

rindex(sub, start, end)

executable

Name of executable

endswith(sub)

rjust(width)

exitfunc

Exit function name

expandtabs()

rpartition(sep)

modules

Loaded modules

find(sub, start, end) rsplit(sep)

path

Search path

index(sub, start, end)

rstrip()

replace()

utcoffset()

platform

Current platform

isalnum() *

split(sep)

isoformat()

dst()

stdin, stdout, stderr

File objects for I/O

isalpha() *

splitlines()

__str__()

tzname()

version_info

Python version info

isdigit() *

startswith(sub)

strftime(format)

winver

Version number

islower() *

strip()

isspace() *

swapcase() *

istitle() *

title() *

sys.argv for $ python foo.py bar -c qux --h

Time Methods

Date Formatting (strftime and strptime)

isupper() *

translate(table)

%a Abbreviated weekday (Sun)

foo.py

join()

upper() *

%A Weekday (Sunday)

sys.argv[1]

bar

ljust(width)

zfill(width)

sys.argv[2]

-c

lower() *

sys.argv[0]

sys.argv[3]

qux

sys.argv[4]

--h

%b Abbreviated month name (Jan)
%B Month name (January)
%c Date and time

Note

Methods marked * are locale
dependant for 8-bit strings.

%d Day (leading zeros) (01 to 31)
%H 24 hour (leading zeros) (00 to 23)
%I 12 hour (leading zeros) (01 to 12)

os Variables

%j

List Methods

Day of year (001 to 366)

altsep

Alternative sep

curdir

Current dir string

append(item)

pop(position)

defpath

Default search path

count(item)

remove(item)

%p AM or PM

devnull

Path of null device

extend(list)

reverse()

%S Second (00 to 61 4)

extsep

Extension separator

index(item)

sort()

%U Week number

linesep

Line separator

insert(position, item)

name

Name of OS

%W Week number

pardir

Parent dir string

%x Date

pathsep

Patch separator

sep

Path separator

Note

Registered OS names: “posix”, “nt”,
“mac”, “os2”, “ce”, “java”, “riscos”

Class Special Methods

%m Month (01 to 12)
%M Minute (00 to 59)

%w Weekday

File Methods

2

1

(00 to 53)

(0 to 6)
3

(00 to 53)

%X Time

close()

readlines(size)

%y Year without century (00 to 99)

flush()

seek(offset)

%Y Year (2008)

fileno()

tell()

%Z Time zone (GMT)

isatty()

truncate(size)

%% A literal "%" character (%)

next()

write(string)

read(size)

writelines(list)

1.

readline(size)

Sunday as start of week. All days in a
new year preceding the first Sunday
are considered to be in week 0.

__new__(cls)

__lt__(self, other)

__init__(self, args)

__le__(self, other)

__del__(self)

__gt__(self, other)

__repr__(self)

__ge__(self, other)

len(a)

6

__str__(self)

Indexes and Slices (of a=[0,1,2,3,4,5])

2.

0 is Sunday, 6 is Saturday.

3.

Monday as start of week. All days in a

__eq__(self, other)

a[0]

0

__cmp__(self, other) __ne__(self, other)

a[5]

5

new year preceding the first Monday

__index__(self)

a[-1]

5

are considered to be in week 0.

__hash__(self)

a[-2]

4

__getattr__(self, name)

a[1:]

[1,2,3,4,5]

__getattribute__(self, name)

a[:5]

[0,1,2,3,4]

account of leap and double-leap

__setattr__(self, name, attr)

a[:-2]

[0,1,2,3]

seconds.

__delattr__(self, name)

a[1:3]

[1,2]

__call__(self, args, kwargs)

a[1:-1]

[1,2,3,4]

b=a[:]

Shallow copy of a

__nonzero__(self)

4.

This is not a mistake. Range takes

Available free from AddedBytes.com

